# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-12-05 16:47
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CommunityShed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ShedName', models.CharField(max_length=20)),
                ('ShedStreetAddress', models.CharField(max_length=20)),
                ('ShedStreetAddress2', models.CharField(max_length=20)),
                ('ShedCity', models.CharField(max_length=20)),
                ('ShedState', models.CharField(max_length=20)),
                ('ShedZip', models.CharField(max_length=20)),
                ('is_Active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Pickup_arrengment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Pref_Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Sharedtool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(default=django.utils.timezone.now, verbose_name='Start Date')),
                ('end_date', models.DateField(default=django.utils.timezone.now, verbose_name='End Date')),
                ('status', models.CharField(choices=[('Shared', 'Shared'), ('BorrowRequest', 'BorrowRequest'), ('Borrowed', 'Borrowed'), ('ReturnRequest', 'ReturnRequest'), ('Returned', 'Returned'), ('Declined', 'Declined')], default='BorrowRequest', max_length=10)),
                ('message', models.CharField(default='None', max_length=500)),
                ('owner_message', models.CharField(default='None', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Tool_Name', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z 0-9 ]*$', 'Name should consist of only alphabet and numbers!')])),
                ('share_date', models.DateField()),
                ('avail_from', models.DateField()),
                ('avail_to', models.DateField()),
                ('message', models.CharField(default='None', max_length=500)),
                ('Description', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator('^[a-zA-Z 0-9 ]*$', 'Name should consist of only alphabet and numbers!')])),
                ('Condition', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z 0-9 ]*$', 'Name should consist of only alphabet and numbers!')])),
                ('Is_active', models.BooleanField(default=True)),
                ('Share_location', models.CharField(choices=[('S', 'Shed'), ('H', 'Home')], max_length=1)),
                ('MinAge', models.IntegerField(default=10)),
                ('picture', models.FileField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('First_Name', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]*$', 'Only alphabetic characters are allowed!')])),
                ('Last_Name', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]*$', 'Only alphabetic characters are allowed!')])),
                ('Date_of_Birth', models.CharField(max_length=20)),
                ('Password', models.CharField(max_length=20)),
                ('Email', models.EmailField(max_length=254, primary_key=True, serialize=False)),
                ('Address_Line1', models.CharField(max_length=100)),
                ('Address_Line2', models.CharField(max_length=100)),
                ('City', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]*$', 'Only alphabetic characters are allowed!')])),
                ('State', models.CharField(choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AS', 'American Samoa'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('DC', 'District Of Columbia'), ('FL', 'Florida'), ('GA', 'Georgia'), ('GU', 'Guam'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('MP', 'Northern Mariana Islands'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PR', 'Puerto Rico'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UM', 'United States Minor Outlying Islands'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VI', 'Virgin Islands'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming')], max_length=50)),
                ('ZIP_Code', models.IntegerField(max_length=5, validators=[django.core.validators.RegexValidator(message='Enter 5 digit Zip Code!', regex='^[0-9][0-9][0-9][0-9][0-9]$')])),
                ('Country', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]*$', 'Only alphabetic characters are allowed!')])),
                ('Phone_Number', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+0123456789'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('Pickup_Arrangment', models.CharField(choices=[('S', 'Self'), ('H', 'Home Delivery')], max_length=100)),
                ('Preferred_Contact', models.CharField(choices=[('P', 'Phone'), ('E', 'Email')], max_length=100)),
                ('seen', models.IntegerField(default=0, max_length=5)),
            ],
        ),
        migrations.AddField(
            model_name='tool',
            name='Owner',
            field=models.ForeignKey(default='None', on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='website.User'),
        ),
        migrations.AddField(
            model_name='tool',
            name='shed',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.CommunityShed'),
        ),
        migrations.AddField(
            model_name='sharedtool',
            name='Borrower',
            field=models.ForeignKey(default='None', on_delete=django.db.models.deletion.CASCADE, related_name='borrower', to='website.User'),
        ),
        migrations.AddField(
            model_name='sharedtool',
            name='atool',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sharing', to='website.Tool'),
        ),
        migrations.AddField(
            model_name='communityshed',
            name='ShedCoord',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.User'),
        ),
    ]
